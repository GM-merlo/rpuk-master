[Default]
Version = 12

Number of Inputs = 0

Sanitize Input Value Check = false
Sanitize Output Value Check = false

Prepared Statement Cache = true

Return InsertID = false

Strip = true
Strip Chars Action = STRIP
Strip Chars = \/\|;{}<>\'
Strip Custom Chars = \/\|;{}<>\'

;;Called when the server starts up, combined into one call to make the query more effective.'
[startupCalls]
SQL1_1 = CALL resetLifeVehicles;
SQL2_1 = CALL deleteDeadVehicles;
SQL3_1 = CALL deleteOldHouses;
SQL4_1 = CALL deleteMessages;
SQL5_1 = CALL deleteExpiredHouses;

Number of Inputs = 0
Prepared Statement Cache = false

;;=========AUCTIONING SYSTEM=========
[auctionBid]
SQL1_1 = UPDATE vehicles SET abaycurrentbid=?, abaycurrentpid=? WHERE id=? AND pid=? AND abaycurrentbid < ? LIMIT 1;

SQL1_INPUTS = 1, 2, 3, 4, 5
Number of Inputs = 5

[auctionEnlist]
SQL1_1 = UPDATE vehicles SET onabay='1', abayminbid=?, abaydesc=?, abaydate=NOW() WHERE id=? AND pid=?;

SQL1_INPUTS = 1, 2-String, 3, 4
Number of Inputs = 4

[getAuctions]
SQL1_1 = SELECT id, classname, pid, plate, color, rgbcolor, onabay, abayminbid, abaydesc, abaydate, abaycurrentbid
SQL1_2 = 	FROM vehicles WHERE onabay='1' LIMIT 75;

Number of Inputs = 0
Prepared Statement Cache = true
OUTPUT = 1, 2-String, 3-String, 4, 5, 6-String, 7, 8, 9-String, 10-String, 11

;;=========GANG SYSTEM=========

;;USED IN fn_queryPlayerGang.sqf
[queryPlayerGang]
SQL1_1 = SELECT id, owner, name, maxmembers, bank, members, spawnpoint FROM gangs WHERE active='1' AND members LIKE ? ORDER BY id DESC;

SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4, 5, 6-String, 7-String

;;USED IN fn_removeGang.sqf
[deactivateGang]
SQL1_1 = UPDATE gangs SET active='0' WHERE id=?;

SQL1_INPUTS = 1
Number of Inputs = 1

;;USED IN fn_updateGangFunds.sqf
[updateGangFunds]
SQL1_1 = UPDATE gangs SET bank = bank + ? WHERE id=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;USED IN fn_insertGang.sqf
[gangNameSelectID]
SQL1_1 = SELECT id FROM gangs WHERE name=? AND active=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;USED IN fn_insertGang.sqf
[getPlayerGangId]
SQL1_1 = SELECT id FROM gangs WHERE members LIKE ? AND active='1';

SQL1_INPUTS = 1
Number of Inputs = 1

;;USED IN fn_insertGang.sqf
[activateGangId]
SQL1_1 = UPDATE gangs SET active=?, owner=?,members=? WHERE id=?;

SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

;;USED IN fn_insertGang.sqf
[insertGang]
SQL1_1 = INSERT INTO gangs (owner, name, members) VALUES(?,?,?);

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3
Return InsertID = true

;;USED IN fn_updateGangFunds.sqf
[updateGangInfo]
SQL1_1 = UPDATE gangs SET bank=?, maxmembers=?, owner=? WHERE id=?;

SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4

;;USED IN fn_updateGangFunds.sqf
[updateGangBank]
SQL1_1 = UPDATE gangs SET bank=? WHERE id=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;USED IN fn_updateGangFunds.sqf
[updateGangMaxMembers]
SQL1_1 = UPDATE gangs SET maxmembers=? WHERE id=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;USED IN fn_updateGangFunds.sqf
[updateGangOwner]
SQL1_1 = UPDATE gangs SET owner=? WHERE id=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;USED IN fn_updateGangFunds.sqf
[updateGangMembers]
SQL1_1 = UPDATE gangs SET members=? WHERE id=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;=========HOUSE SYSTEM=========
;;USED IN fn_addHouse.sqf
[insertHouse]
SQL1_1 = INSERT INTO houses (pid, pos, inventory, containers, owned, world, lastonline) VALUES(?, ?, '"[[],0]"', '"[]"', '1', ?, DATE(NOW()));

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3
Return InsertID = true

;;USED IN fn_fetchPlayerHouses.sqf
[fetchPlayerHouses]
SQL1_1 = UPDATE houses SET lastonline=DATE(NOW()) WHERE pid=? AND owned='1';
SQL2_1 = SELECT pid, pos, inventory, containers FROM houses WHERE pid=? AND owned='1' AND world=?;

SQL1_INPUTS = 1
SQL2_INPUTS = 1, 2
Number of Inputs = 2
OUTPUT = 1-String, 2-String, 3-String, 4-String

;;USED IN fn_houseCleanup.sqf
[houseCleanup]
SQL1_1 = SELECT pid, pos FROM houses WHERE pid=? AND owned='1' AND world=? LIMIT 3;

SQL1_INPUTS = 1, 2
Number of Inputs = 2
OUTPUT = 1-String, 2-String, 3-String, 4-String

;;USED IN fn_houseCleanup.sqf
[sellHousePID]
SQL1_1 = UPDATE houses SET owned='0', pos='[]' WHERE pid=? AND pos=? AND owned='1' AND world=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

;;USED IN fn_houseCleanup.sqf
[sellHouseID]
SQL1_1 = UPDATE houses SET owned='0', pos='[]' WHERE id=? AND world=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;USED IN fn_initHouses.sqf
[houseCount]
SQL1_1 = SELECT COUNT(*) FROM houses WHERE owned='1' AND world=?;

SQL1_INPUTS = 1
Number of Inputs = 1

;;USED IN fn_initHouses.sqf
[housingInit]
SQL1_1 = SELECT houses.id, houses.pid, houses.pos, players.name FROM houses INNER JOIN players ON houses.pid=players.playerid WHERE houses.owned='1' AND houses.world=? LIMIT ?,10;

SQL1_INPUTS = 1, 2
Number of Inputs = 2
OUTPUT = 1, 2-String, 3-String, 4-String

;;USED IN fn_updateHouseContainers.sqf
[updateHouseContainers]
SQL1_1 = UPDATE houses SET containers=? WHERE id=? AND world=?

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

;;USED IN fn_updateHouseTrunk.sqf
[updateHouseTrunk]
SQL1_1 = UPDATE houses SET inventory=? WHERE id=? AND world=?

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

;;USED IN fn_initHouses.sqf
[checkHouse]
SQL1_1 = SELECT COUNT(*) FROM houses WHERE owned='1' AND pos = ? AND world=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2
OUTPUT = 1

;;=========MAYOR SYSTEM=========
;;USED IN init.sqf (SERVERSIDE)
[getMayorInOffice]
SQL1_1 = SELECT playerid,name FROM mayor WHERE inoffice='1' LIMIT 1;

Number of Inputs = 0
Prepared Statement Cache = false
OUTPUT = 1-String, 2-String

;;USED IN fn_checkBallotApplication.sqf
[checkBallotApplication]
SQL1_1 = SELECT COUNT(*) FROM mayor WHERE playerid=?;

SQL1_INPUTS = 1
Number of Inputs = 1

;;USED IN fn_getBallotEntries.sqf
[getBallotEntries]
SQL1_1 = SELECT name,about,id FROM mayor WHERE inoffice = '0' LIMIT 50;

OUTPUT = 1-String, 2-String, 3
Number of Inputs = 0

;;USED IN fn_submitBallot.sqf
[checkVoteStatus]
SQL1_1 = SELECT ballotstatus FROM players WHERE playerid=? LIMIT 1;

SQL1_INPUTS = 1
Number of Inputs = 1

;;USED IN fn_submitBallot.sqf
[submitVote]
SQL1_1 = CALL submitVote (?, ?);

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;USED IN fn_submitBallotApplication.sqf
[submitBallotApplication]
SQL1_1 = INSERT INTO mayor (name,about,votes,playerid,inoffice) VALUES (?,?,'0',?,'0')

SQL1_INPUTS = 1-String, 2-String, 3
Number of Inputs = 3

;;=========PLAYER SYSTEM=========
[playerInfo]
SQL1_1 = SELECT playerid, name FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1, 2

[insertPlayer]
SQL1_1 = INSERT INTO players (playerid, name, cash, bankacc, aliases, cop_licenses, med_licenses, civ_licenses, civ_gear, cop_gear, med_gear, wantedlist, guid, copprofessions, nhsprofessions, civprofessions) VALUES(?, ?, ?, ?, ?,'"[]"','"[]"','"[]"','"[]"','"[]"','"[]"','"[[],0]"', ?, '"[]"', '"[]"', '"[]"');

SQL1_INPUTS = 1, 2, 3, 4, 5-String, 1-BEGUID
Number of Inputs = 5

[updateWest]
;;                               1       2          3           4               5       6                 7     8                             9
SQL1_1 = UPDATE players SET name=?, cash=?, bankacc=?, cop_gear=?, cop_licenses=?, guid=?, copprofessions=?, xp=?, lastcopsync=NOW() WHERE playerid=?

SQL1_INPUTS = 1, 2, 3, 4-String, 5-String, 6-BEGUID, 7-String, 8, 9
Number of Inputs = 9

[updateCiv]
;;                               1       2          3               4           5           6             7       8                 9          10     11               12
SQL1_1 = UPDATE players SET name=?, cash=?, bankacc=?, civ_licenses=?, civ_gear=?, arrested=?, wantedlist=?, guid=?, civprofessions=?, gangrank=?, xp=? WHERE playerid=?

SQL1_INPUTS = 1, 2, 3, 4-String, 5-String, 6, 7-String, 8-BEGUID, 9-String, 10, 11, 12
Number of Inputs = 12

[updateNHS]
;;                               1       2          3               4           5       6                 7                                     8
SQL1_1 = UPDATE players SET name=?, cash=?, bankacc=?, med_licenses=?, med_gear=?, guid=?, nhsprofessions=?, lastmedicsync=NOW() WHERE playerid=?

SQL1_INPUTS = 1, 2, 3, 4-String, 5-String, 6-BEGUID, 7-String, 8
Number of Inputs = 8

[queryWest]
;;                 1        2     3     4         5            6             7            8        9       10           11          12            13          14      15     16      17   18                             1
SQL1_1 = SELECT playerid, name, cash, bankacc, adminlevel, donatorlvl, cop_licenses, coplevel, cop_gear, blacklist, copprofessions, npaslevel, mpulevel, arlevel, niulevel, uid, aliases, xp FROM players WHERE playerid=?
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7-String, 8-String, 9-String, 10, 11-String, 12-String, 13-String, 14-String, 15-String, 16-String, 17, 18

[queryCiv]
;;                 1        2    3       4          5           6           7           8          9          10       11           12             13      14     15     16       17                             18
SQL1_1 = SELECT playerid, name, cash, bankacc, adminlevel, donatorlvl, civ_licenses, arrested, civ_gear, rebellevel, wantedlist, civprofessions, gangrank, uid, aliases, balevel, xp FROM players WHERE playerid=?
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7-String, 8-String, 9-String, 10-String, 11-String, 12-String, 13-String, 14, 15, 16, 17, 18

[queryNHS]
;;                 1        2     3     4         5          6          7                 8          9        10            11      12                              1
SQL1_1 = SELECT playerid, name, cash, bankacc, adminlevel, donatorlvl, med_licenses, mediclevel, med_gear, nhsprofessions, uid, aliases FROM players WHERE playerid=?
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7-String, 8-String, 9-String, 10-String, 11-String, 12

[updateAliases]
SQL1_1 = UPDATE players SET aliases=? WHERE playerid=? LIMIT 1;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;=========VEHICLE SYSTEM=========
[insertVehicle]
;;                               1       2        3    4                                5     6
SQL1_1 = INSERT INTO vehicles (side, classname, type, pid, alive, active, inventory, color, plate, rgbcolor) VALUES (?, ?, ?, ?, '1','1','""[[],0]""', ?, ?,'"[]"');

SQL1_INPUTS = 1, 2, 3, 4, 5, 6
Number of Inputs = 6

[cleanupVehicle]
;;                                                 1           2           1
SQL1_1 = UPDATE vehicles SET active='0', inventory=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1-String, 2, 3
Number of Inputs = 3

[getVehicles]
;;               1   2      3          4     5    6     7       8     9                             1                                                      2          3
SQL1_1 = SELECT id, side, classname, type, pid, alive, active, plate, color FROM vehicles WHERE pid=? AND alive='1' AND active='0' AND onabay='0' AND side=? AND type=? LIMIT 20;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3
OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6, 7, 8, 9

[spawnVehicleGet]
;;				1   2     3          4     5    6      7       8      9        10          11
SQL1_1 = SELECT id, side, classname, type, pid, alive, active, plate, color, rgbcolor, inventory FROM vehicles WHERE id=? AND pid=?;
SQL1_INPUTS = 1, 2
Number of Inputs = 2

OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6, 7, 8, 9, 10-String, 11-String

[spawnVehicleActivate]
SQL1_1 = UPDATE vehicles SET active='1' WHERE pid=? AND id=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

[crushVehicle]
SQL1_1 = UPDATE vehicles SET alive='0' WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

[deleteVehicle]
SQL1_1 = UPDATE vehicles SET alive='0' WHERE pid=? AND id=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

[impoundVehicle]
SQL1_1 = UPDATE vehicles SET active='0', inventory='""[[],0]""' WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

[garageVehicle]
SQL1_1 = UPDATE vehicles SET active='0', inventory=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1-String, 2, 3
Number of Inputs = 3

[updateVehicle]
;;                                 1           2            3           4           5
SQL1_1 = UPDATE vehicles SET color=?, rgbcolor=?, inventory=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2-String, 3-String, 4, 5
Number of Inputs = 5

;;=========PHONE SYSTEM=========
[deleteMsg]
SQL1_1 = UPDATE cellphone SET remove='1' WHERE toID=? AND uid=?

SQL1_INPUTS = 1, 2
Number of Inputs = 2

[msgRequest]
;;                1       2      3        4        5       6                           1
SQL1_1 = SELECT fromID, toID, message, fromName, toName, uid FROM cellphone WHERE toID=? AND remove='0' ORDER BY time DESC LIMIT 15

SQL1_INPUTS = 1
Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4-String, 5-String, 6

[insertMessage]
;;                                1       2      3       4         5                    1  2  3  4  5
SQL1_1 = INSERT INTO cellphone (fromID, toID, message, fromName, toName, remove) VALUES(?, ?, ?, ?, ?, '0')

SQL1_INPUTS = 1, 2, 3-String, 4, 5
Number of Inputs = 5

;;=====ALUKACSYSTEM======
[insertACLog]
SQL1_1 = INSERT INTO aclogs (name, playerid, guid, reason) VALUES(?, ?, ?, ?)

SQL1_INPUTS = 1, 2, 2-BEGUID, 3
Number of Inputs = 3
